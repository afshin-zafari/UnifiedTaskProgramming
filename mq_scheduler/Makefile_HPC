
CC = mpicc
CXX = mpic++
AR = ar
LD = mpic++
DUCTTEIP_DIR = /pica/h1/afshin/Damavand/D4/DuctTeip/ResStudio/Prototype
BOOST        = /pica/h1/afshin/RabbitMQ/Client/RMQC/boost/boost_1_61_0
AMQP_CPP     = /pica/h1/afshin/RabbitMQ/Client/AMQP-CPP/AMQP-CPP
SUPERGLUE    = /pica/h1/afshin/sg/superglue

INC  = -I../dispatcher/include 
INC += -I../sg_scheduler/include 
INC += -I$(DUCTTEIP_DIR)/include 
INC += -I../dt_scheduler/include 
INC += -Iinclude 
INC += -I$(BOOST)
INC += -I$(AMQP_CPP)/include 
INC += -I$(AMQP_CPP)/examples/rabbitmq_tutorials 
INC += -I$(AMQP_CPP)/examples/rabbitmq_tutorials/build 
INC += -I$(SUPERGLUE)/include   
INC += -I../ublas/include

CFLAGS = -Wall -fexceptions  -Wno-unused-variable -std=c++11 -g -pthread -DSLIB=1
RESINC = 
LIBDIR =
LIB = 
LDFLAGS  = -L$(AMQP_CPP)/lib  
LDFLAGS += -L$(AMQP_CPP)/examples/rabbitmq_tutorials/build  
LDFLAGS += -L$(BOOST)/stage/lib 
LDFLAGS += -Wl,-rpath,$(AMQP_CPP)/lib 
LDFLAGS += -L../dispatcher/bin/Debug -ldispatcher 
LDFLAGS += -Wl,--allow-multiple-definition 
LDFLAGS += -L../ductteip/bin/Debug -lductteip 
LDFLAGS += ../dt_scheduler/bin/Debug/libdt_scheduler.a 
LDFLAGS += ../sg_scheduler/bin/Debug/libsg_scheduler.a 
LDFLAGS += ../cpu_blas_scheduler/bin/Debug/libcpu_blas_scheduler.a 
LDFLAGS += -lgsl -lgslcblas 
LDFLAGS += $(BOOST)/stage/lib/libboost_thread.a 
LDFLAGS += $(BOOST)/stage/lib/libboost_system.a 
LDFLAGS += -lamqpcpp 
LDFLAGS += -lasio_handler 
LDFLAGS += -rdynamic -lpthread  

UGEMM_APP_LDFLAGS  = -L$(AMQP_CPP)/lib  
UGEMM_APP_LDFLAGS += -L$(AMQP_CPP)/examples/rabbitmq_tutorials/build  
UGEMM_APP_LDFLAGS += -L$(BOOST)/stage/lib 
UGEMM_APP_LDFLAGS += -rdynamic 
UGEMM_APP_LDFLAGS += -lamqpcpp 
UGEMM_APP_LDFLAGS += -lasio_handler 
UGEMM_APP_LDFLAGS += -lpthread 
UGEMM_APP_LDFLAGS += $(BOOST)/stage/lib/libboost_system.a 
UGEMM_APP_LDFLAGS += -Wl,-rpath,$(AMQP_CPP)/lib 
UGEMM_APP_LDFLAGS += -L../dispatcher/bin/Debug 
UGEMM_APP_LDFLAGS += -lutpmq 
UGEMM_APP_LDFLAGS += -Wl,--allow-multiple-definition 
UGEMM_APP_LDFLAGS += -L../ublas/lib -lublas

DT_CONFIG_OBJ=../ductteip/obj/Debug/__/o/config.o

INC_DEBUG     = $(INC) 
CFLAGS_DEBUG  = $(CFLAGS) -g 
RESINC_DEBUG  = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG  = $(LIBDIR)
LIB_DEBUG     = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG  = obj/Debug
DEP_DEBUG     = 
OUT_DEBUG     = bin/Debug/mqapp

INC_RELEASE     = $(INC) 
CFLAGS_RELEASE  = $(CFLAGS) -O2 -D'BUILD=RELEASE'
RESINC_RELEASE  = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE  = $(LIBDIR)
LIB_RELEASE     = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE  = obj/Release
DEP_RELEASE     = 
OUT_RELEASE     = bin/Release/mqapp

UGEMM_APP_OBJ  = $(OBJDIR_DEBUG)/mq_scheduler.o 
UGEMM_APP_OBJ += $(OBJDIR_DEBUG)/MQWrapper.o 
UGEMM_APP_OBJ += $(OBJDIR_DEBUG)/ugemm_app.o 
UGEMM_APP_OBJ += $(DT_CONFIG_OBJ)

UGEMM_SERVER_OBJ  = $(OBJDIR_DEBUG)/mq_scheduler.o 
UGEMM_SERVER_OBJ += $(OBJDIR_DEBUG)/MQWrapper.o 
UGEMM_SERVER_OBJ += $(OBJDIR_DEBUG)/ugemm_server.o

MQ_PROFILE_OBJ  = $(OBJDIR_DEBUG)/mq_scheduler.o 
MQ_PROFILE_OBJ += $(OBJDIR_DEBUG)/MQWrapper.o  
MQ_PROFILE_OBJ += $(OBJDIR_DEBUG)/mq_profile.o 

UGEMM_APP_OUT    = bin/Debug/ugemm_app
UGEMM_SERVER_OUT = bin/Debug/ugemm_server
MQ_PROFILE_OUT   = bin/Debug/mq_profile



OBJ_DEBUG = $(OBJDIR_DEBUG)/mq_scheduler.o $(OBJDIR_DEBUG)/MQWrapper.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/mq_scheduler.o $(OBJDIR_RELEASE)/MQWrapper.o

all: debug release
clean: clean_debug clean_release

before_debug: 
	$(info ***************** MAIN APP (DEBUG) **************************)
	@test -d bin/Debug || mkdir -p bin/Debug
	@test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)
	@test -d $(OBJDIR_DEBUG)/src || mkdir -p $(OBJDIR_DEBUG)/src

after_debug: 
	$(info ************************************************************)

debug: before_debug out_debug after_debug ugemm_app

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG) $(MQ_PROFILE_OBJ)
	$(info creating $(OUT_DEBUG))
	@$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)
	$(info create mq_profile)
	@$(LD) $(LIBDIR_DEBUG) -o $(MQ_PROFILE_OUT) $(MQ_PROFILE_OBJ)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

ugemm_app: before_debug $(OBJ_DEBUG) $(DEP_DEBUG) $(UGEMM_APP_OBJ) 
	$(info create ugemm_app)
	@$(LD) $(LIBDIR_DEBUG) -o $(UGEMM_APP_OUT) $(UGEMM_APP_OBJ)  $(UGEMM_APP_LDFLAGS) $(LIB_DEBUG)
ugemm_server: before_debug $(OBJ_DEBUG) $(DEP_DEBUG) $(UGEMM_SERVER_OBJ) 
	$(info create ugemm_server)
	@$(LD) $(LIBDIR_DEBUG) -o $(UGEMM_SERVER_OUT) $(UGEMM_SERVER_OBJ) $(LDFLAGS_DEBUG) $(LIB_DEBUG)


$(OBJDIR_DEBUG)/send.o: send.cpp
	$(info $(notdir $<))
	@$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c send.cpp -o $(OBJDIR_DEBUG)/send.o

$(OBJDIR_DEBUG)/mq_scheduler.o: src/mq_scheduler.cpp
	$(info $(notdir $<))
	@$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src/mq_scheduler.cpp -o $(OBJDIR_DEBUG)/mq_scheduler.o

$(OBJDIR_DEBUG)/MQWrapper.o: src/MQWrapper.cpp
	$(info $(notdir $<))
	@$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src/MQWrapper.cpp -o $(OBJDIR_DEBUG)/MQWrapper.o

$(OBJDIR_DEBUG)/ugemm_app.o: ugemm_app.cpp
	$(info $(notdir $<))
	@$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ugemm_app.cpp -o $(OBJDIR_DEBUG)/ugemm_app.o

$(OBJDIR_DEBUG)/ugemm_server.o: ugemm_server.cpp
	$(info $(notdir $<))
	@$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ugemm_server.cpp -o $(OBJDIR_DEBUG)/ugemm_server.o

$(OBJDIR_DEBUG)/mq_profile.o: mq_profile.cpp
	$(info $(notdir $<))
	@$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c mq_profile.cpp -o $(OBJDIR_DEBUG)/mq_profile.o


clean_debug: 
	@rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	@rm -rf bin/Debug
	@rm -rf $(OBJDIR_DEBUG)
	@rm -rf $(OBJDIR_DEBUG)/src

before_release: 
	$(info ***************** MAIN APP (RELEASE)************************)
	@test -d bin/Release || mkdir -p bin/Release
	@test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)
	@test -d $(OBJDIR_RELEASE)/src || mkdir -p $(OBJDIR_RELEASE)/src

after_release: 
	$(info ************************************************************)
	$(info )


release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(info creating $(OUT_RELEASE))
	@$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/send.o: send.cpp
	$(info $(notdir $<))
	@$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c send.cpp -o $(OBJDIR_RELEASE)/send.o

$(OBJDIR_RELEASE)/mq_scheduler.o: src/mq_scheduler.cpp
	$(info $(notdir $<))
	@$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/mq_scheduler.cpp -o $(OBJDIR_RELEASE)/mq_scheduler.o

$(OBJDIR_RELEASE)/MQWrapper.o: src/MQWrapper.cpp
	$(info $(notdir $<))
	@$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src/MQWrapper.cpp -o $(OBJDIR_RELEASE)/MQWrapper.o

clean_release: 
	@rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	@rm -rf bin/Release
	@rm -rf $(OBJDIR_RELEASE)
	@rm -rf $(OBJDIR_RELEASE)/src

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

