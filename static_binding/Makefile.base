CPP = g++
LD  = g++
AR  = ar

COMP_FLAGS  = -std=c++11
COMP_FLAGS += -Iinclude
LINK_FLAGS  = -Wl,--allow-multiple-definition 

SG_DIR = /pica/h1/afshin/sg/superglue
DT_DIR = /pica/h1/afshin/Damavand/D4/DuctTeip/ResStudio/Prototype
DT_LIB = $(DT_DIR)/lib/libductteip.a

SG_INC = $(SG_DIR)/include
DT_INC = $(DT_DIR)/include

SG_COMP_FLAG = -I$(SG_INC) -pthread
DT_COMP_FLAG = -I$(DT_INC) 


all: bo sb
clean:
	rm -f ./bin/* ./obj/* lib/*

test:
	$(info $(COMMON))
	$(info $(APP_TARGET_BO))
	$(info $(SRC_LIB_BO))

#------------------------------
COMMON  =          basic.cpp
COMMON +=          GData.cpp
COMMON +=          ublas.cpp
COMMON +=          ugemm.cpp
COMMON +=          utrsm.cpp
COMMON +=        GHandle.cpp
COMMON +=      utp_basic.cpp
COMMON +=   GPartitioner.cpp
COMMON += memory_manager.cpp


#--------- BLAS_ONLY (BO) ---------

SRC_LIB_BO  = $(COMMON)
SRC_LIB_BO +=       sch_blas.cpp

SRC_APP_BO  = 
SRC_APP_BO +=  cfg_blas_only.cpp
SRC_APP_BO += main_BLAS_ONLY.cpp

OBJ_LIB_BO = $(subst .cpp,.o,$(SRC_LIB_BO))
OBJ_APP_BO = $(subst .cpp,.o,$(SRC_APP_BO))


SRCP_LIB_BO = $(addprefix ./src/,$(SRC_LIB_BO))
OBJP_LIB_BO = $(addprefix ./obj/,$(OBJ_LIB_BO))

SRCP_APP_BO = $(addprefix ./src/,$(SRC_APP_BO))
OBJP_APP_BO = $(addprefix ./obj/,$(OBJ_APP_BO))

      NAME_BO = utp_blas_only
LIB_TARGET_BO =./lib/lib$(NAME_BO).a
APP_TARGET_BO =./bin/$(NAME_BO)

$(OBJP_LIB_BO):./obj/%.o: ./src/%.cpp #$(SRCP_LIB_BO)
	@$(info $(notdir $<) )
	@$(CPP) -o $@ -c $< $(COMP_FLAGS) -DBLAS_ONLY

$(OBJP_APP_BO):./obj/%.o : ./src/%.cpp #$(SRCP_APP_BO)
	@$(info $(notdir $<) )
	@$(CPP) -o $@ -c $< $(COMP_FLAGS) -DBLAS_ONLY

$(LIB_TARGET_BO):$(OBJP_LIB_BO)
	@$(AR) rcsv  $@ $^ 

$(APP_TARGET_BO):$(LIB_TARGET_BO) $(OBJP_APP_BO)
	@$(info Linking ... to  $(APP_TARGET_BO))
	@$(LD) -o $@ $(OBJP_APP_BO) -L./lib -l$(NAME_BO)  $(LINK_FLAGS)

bo:$(APP_TARGET_BO)



#--------- CUBLAS_ONLY ---------
LIB_CO  = $(COMMON)
LIB_CO +=       sch_cu_blas.cpp

APP_CO  = 
APP_CO +=  cfg_cu_blas_only.cpp
APP_CO += main_CU_BLAS_ONLY.cpp

#--------- DT_BLAS ---------
zCOMMON += sch_blas.cpp
zCOMMON += sch_ductteip.cpp
a=cfg_dt_blas.cpp
a=main_DT_BLAS.cpp
#--------- DT FORK ---------
zCOMMON += sch_blas.cpp
zCOMMON += sch_ductteip.cpp
zCOMMON += sch_spu.cpp
zCOMMON += sch_superglue.cpp
a=cfg_dt_fork_sg_spu.cpp
a=main_DT_FORK_SG_SPU.cpp
#--------- DT SG BLAS ---------
zCOMMON += sch_blas.cpp
zCOMMON += sch_ductteip.cpp
zCOMMON += sch_superglue.cpp
a=cfg_dt_sg_blas.cpp
a=main_DT_SG_BLAS.cpp
#--------- SG BLAS (SB)---------
SRC_LIB_SB = $(COMMON)
SRC_LIB_SB +=       sch_blas.cpp
SRC_LIB_SB +=  sch_superglue.cpp

SRC_APP_SB  =
SRC_APP_SB +=  cfg_sg_blas.cpp
SRC_APP_SB += main_SG_BLAS.cpp

OBJ_LIB_SB = $(subst .cpp,.o,$(SRC_LIB_SB))
OBJ_APP_SB = $(subst .cpp,.o,$(SRC_APP_SB))


SRCP_LIB_SB = $(addprefix ./src/,$(SRC_LIB_SB))
OBJP_LIB_SB = $(addprefix ./obj/,$(OBJ_LIB_SB))

SRCP_APP_SB = $(addprefix ./src/,$(SRC_APP_SB))
OBJP_APP_SB = $(addprefix ./obj/,$(OBJ_APP_SB))

      NAME_SB = utp_sg_blas
LIB_TARGET_SB =./lib/lib$(NAME_SB).a
APP_TARGET_SB =./bin/$(NAME_SB)

$(OBJP_LIB_SB):./obj/%.o: ./src/%.cpp #$(SRCP_LIB_SB)
	@$(info $(notdir $<) )
	@$(CPP) -o $@ -c $< $(COMP_FLAGS) $(SC_INC) -DSG_BLAS -DSG_INCLUDED

$(OBJP_APP_SB):./obj/%.o : ./src/%.cpp #$(SRCP_APP_SB)
	@$(info $(notdir $<) )
	@$(CPP) -o $@ -c $< $(COMP_FLAGS) $(SG_INC) -DSG_BLAS -DSG_INCLUDED

$(LIB_TARGET_SB):$(OBJP_LIB_SB)
	@$(AR) rcsv  $@ $^ 

$(APP_TARGET_SB):$(LIB_TARGET_SB) $(OBJP_APP_SB)
	@$(info Linking ... to  $(APP_TARGET_SB))
	@$(LD) -o $@ $(OBJP_APP_SB) -L./lib -l$(NAME_SB)  $(LINK_FLAGS)

sb:$(APP_TARGET_SB)

